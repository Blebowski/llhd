; RUN: llhd-opt %s -p deseq

proc %ff_clkrise (i1$ %CLK, i32$ %D) -> (i32$ %Q) {
init:
    %CLK1 = prb i1$ %CLK
    %0 = const i1 0
    %1 = eq i1 %CLK1, %0
    %3 = const time 0s 1d
    wait %check, %CLK
check:
    %D1 = prb i32$ %D
    %CLK2 = prb i1$ %CLK
    %4 = neq i1 %CLK2, %0
    %posedge = and i1 %1, %4
    drv i32$ %Q if %posedge, %D1, %3
    br %init
}

; CHECK: entity %ff_clkrise (i1$ %CLK, i32$ %D) -> (i32$ %Q) {
; CHECK:     %D1 = prb i32$ %D
; CHECK:     %0 = prb i1$ %CLK
; CHECK:     %1 = const i32 0
; CHECK:     %2 = reg i32 %1, [%D1, rise i1 %0]
; CHECK:     con i32$ %Q, %2
; CHECK: }

proc %ff_clkfall (i1$ %CLK, i32$ %D) -> (i32$ %Q) {
init:
    %CLK1 = prb i1$ %CLK
    %0 = const i1 1
    %1 = eq i1 %CLK1, %0
    %3 = const time 0s 1d
    wait %check, %CLK
check:
    %D1 = prb i32$ %D
    %CLK2 = prb i1$ %CLK
    %4 = neq i1 %CLK2, %0
    %posedge = and i1 %1, %4
    drv i32$ %Q if %posedge, %D1, %3
    br %init
}

; CHECK: entity %ff_clkfall (i1$ %CLK, i32$ %D) -> (i32$ %Q) {
; CHECK:     %D1 = prb i32$ %D
; CHECK:     %0 = prb i1$ %CLK
; CHECK:     %1 = const i32 0
; CHECK:     %2 = reg i32 %1, [%D1, fall i1 %0]
; CHECK:     con i32$ %Q, %2
; CHECK: }
