/* Copyright (c) 2014 Fabian Schuiki */
#pragma once

namespace llhd {
namespace vhdl {

enum TokenType {
	kTokenInvalid = 0x000,
	kTokenEOF,
	kTokenComment,
	kTokenWhitespace,
	kTokenNumber,

	// Identifiers
	kTokenIdentifier = 0x100,
	kTokenBasicIdentifier,
	kTokenExtendedIdentifier,

	// Keywords, which are special identifiers
	kTokenKeywordIdentifier,
	kKeywordAbs,
	kKeywordAccess,
	kKeywordAfter,
	kKeywordAlias,
	kKeywordAll,
	kKeywordAnd,
	kKeywordArchitecture,
	kKeywordArray,
	kKeywordAssert,
	kKeywordAttribute,
	kKeywordBegin,
	kKeywordBlock,
	kKeywordBody,
	kKeywordBuffer,
	kKeywordBus,
	kKeywordCase,
	kKeywordComponent,
	kKeywordConfiguration,
	kKeywordConstant,
	kKeywordLabel,
	kKeywordDisconnect,
	kKeywordDownto,
	kKeywordMap,
	kKeywordElse,
	kKeywordElsif,
	kKeywordEnd,
	kKeywordEntity,
	kKeywordExit,
	kKeywordFile,
	kKeywordFor,
	kKeywordFunction,
	kKeywordGenerate,
	kKeywordGeneric,
	kKeywordGroup,
	kKeywordGuarded,
	kKeywordIf,
	kKeywordImpure,
	kKeywordIn,
	kKeywordInertial,
	kKeywordInout,
	kKeywordIs,
	kKeywordLibrary,
	kKeywordLinkage,
	kKeywordLiteral,
	kKeywordLoop,
	kKeywordMod,
	kKeywordNand,
	kKeywordNew,
	kKeywordNext,
	kKeywordNor,
	kKeywordNot,
	kKeywordNull,
	kKeywordOf,
	kKeywordOn,
	kKeywordOpen,
	kKeywordOr,
	kKeywordOthers,
	kKeywordOut,
	kKeywordPackage,
	kKeywordPort,
	kKeywordPostponed,
	kKeywordProcedural,
	kKeywordProcedure,
	kKeywordProcess,
	kKeywordProtected,
	kKeywordPure,
	kKeywordRange,
	kKeywordRecord,
	kKeywordReference,
	kKeywordRegister,
	kKeywordReject,
	kKeywordRem,
	kKeywordReport,
	kKeywordReturn,
	kKeywordRol,
	kKeywordRor,
	kKeywordSelect,
	kKeywordSeverity,
	kKeywordShared,
	kKeywordSignal,
	kKeywordSla,
	kKeywordSll,
	kKeywordSra,
	kKeywordSrl,
	kKeywordSubtype,
	kKeywordThen,
	kKeywordTo,
	kKeywordTransport,
	kKeywordType,
	kKeywordUnaffected,
	kKeywordUnits,
	kKeywordUntil,
	kKeywordUse,
	kKeywordVariable,
	kKeywordWait,
	kKeywordWhen,
	kKeywordWhile,
	kKeywordWith,
	kKeywordXnor,
	kKeywordXor,

	// Symbols
	kTokenSymbol = 0x200,
	kTokenAmpersand,
	kTokenApostrophe,
	kTokenLParen,
	kTokenRParen,
	kTokenPlus,
	kTokenComma,
	kTokenMinus,
	kTokenPeriod,
	kTokenSemicolon,
	kTokenPipe,
	kTokenLBrack,
	kTokenRBrack,
	kTokenDoubleStar,
	kTokenStar,
	kTokenNotEqual,
	kTokenSlash,
	kTokenVarAssign,
	kTokenColon,
	kTokenLessEqual,
	kTokenBox,
	kTokenLess,
	kTokenArrow,
	kTokenEqual,
	kTokenGreaterEqual,
	kTokenGreater,

	// Literals
	kTokenLiteral = 0x300,
	kTokenAbstractLiteral,
	kTokenCharacterLiteral,
	kTokenStringLiteral,
	kTokenBitStringLiteral,

	// First Stage Groups
	kTokenParenGroup = 0x400,
	kTokenBrackGroup,
	kTokenBraceGroup,

	kTokenMask = 0x700
};

} // namespace vhdl
} // namespace llhd
